{"version":3,"sources":["Task/Task.js","TasksList/TasksList.js","Button/Button.js","Pagination/Pagination.js","Sort/Sort.js","NewTask/NewTask.js","App.js","index.js"],"names":["Task","_ref","id","user","title","text","mail","isDone","onComplete","onDelete","_jsx","className","children","_jsxs","concat","onClick","style","color","fontWeight","TasksList","tasks","currentTasks","handleDelete","handleIsDone","length","map","task","Button","props","restProps","_objectWithoutProperties","_excluded","classNames","_objectSpread","Pagination","onPrevClick","onNextClick","page","pagesTotal","disabled","Math","max","Sort","onChange","value","initialState","NewTask","onCreate","setTask","useState","handleChange","event","name","target","Date","toLocaleTimeString","onSubmit","preventDefault","type","maxLength","rows","App","setTasks","setPage","slice","ceil","paddingTop","sort","a","b","handlePrevClick","handleNextClick","min","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9369b30.chunk.js","sourcesContent":["import React from 'react'\nimport './Task.css'\n\nexport default function Task({id, user, title, text, mail, isDone, onComplete, onDelete,}) {\n\n  return (\n    <div className='task-container'>\n      <div className={`task ${isDone ? 'task-done' : ''}`}>\n        <p className='btns bottom_line'>\n          <button id='btnChangeCondition' className={`button button__condition ${isDone ? 'button__done' : 'button__not-done'}`} onClick={() => onComplete(id)}> {isDone === true ? 'Выполнено' : 'Не выполнено'} </button>\n          <button className='button__delete' style={{color: isDone ? '#fff' : '#b61313'}} onClick={() => onDelete(id)}>&times;</button>\n        </p>\n        <h2 className=\"task__title\">Задача: {title}</h2>\n        <p className=\"task__text\"><b>Описание</b>: {text} </p>\n        <p className=\"task__mail\"><b>E-mail</b>: {mail} </p>\n        <p className=\"task__user bottom_line\"><b>Пользователь</b>: {user} </p>\n        <p style={{fontWeight: 400}}>Выполнено: <b><span className={`${isDone ? 'green' : 'red'}`}>{isDone ? 'да' : 'нет'}</span></b></p>\n      </div>\n    </div>\n  );\n}\n    \n","import Task from \"../Task/Task\"\nimport './TasksList.css'\n\nfunction TasksList({ tasks, currentTasks, handleDelete, handleIsDone }) {\n  return (\n    <div className={`${tasks.length === 2 ? 'tasks-two' : 'tasks-list'}`} >\n        {currentTasks.map((task) => (\n          <Task\n            key={task.id}\n            id={task.id}\n            user={task.user}\n            title={task.title}\n            text={task.text}\n            mail={task.mail}\n            isDone={task.isDone}\n            onDelete={handleDelete}\n            onComplete={handleIsDone}\n        />\n    ))}\n    </div>\n  )\n}\n\nexport default TasksList","import React from \"react\";\nimport './Button.css';\n\nexport default function Button(props) {\n  const { className, ...restProps } = props;\n  const classNames = className ? `button ${className}` : 'button';\n\n  return (\n    <button className={classNames} {...restProps} />\n  );\n}","import React from \"react\";\nimport Button from '../Button/Button'\nimport './Pagination.css';\n\nexport default function Pagination({onPrevClick, onNextClick, page, pagesTotal, tasks}) {\n  return (\n    <div className=\"pagination\">\n      <Button\n        className=\"pagination__prev pagination-btn\"\n        onClick={onPrevClick}\n        disabled={page === 1}\n      >\n        Предыдущая страница\n      </Button>\n\n      <div className=\"pagination__page\">{page} / {Math.max(pagesTotal, 1)}</div>\n\n      <Button\n        className=\"pagination__next pagination-btn\"\n        onClick={onNextClick}\n        disabled={tasks.length <= 3 || page === pagesTotal}\n      >\n        Следующая страница\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Sort.css\";\n\nexport default function Sort({onChange}) {\n  return (\n    <select className=\"sort\" onChange={onChange} id=\"sort\">\n      <option value=\"user_up\">По имени пользователя (по возрастанию)</option>\n      <option value=\"user_down\">По имени пользователя (по убыванию)</option>\n      <option value=\"status_up\">По статусу (сначала невыполненные)</option>\n      <option value=\"status_down\">По статусу (сначала выполненные)</option>\n      <option value=\"mail_up\">По email (по возрастанию)</option>\n      <option value=\"mail_down\">По email (по убыванию)</option>\n    </select>\n  );\n}\n","import React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport './NewTask.css';\n\nconst initialState = {\n  title: '',\n  text: '',\n  mail: '',\n  isDone: false,\n  user: '',\n  id: ''\n};\n\nexport default function NewTask({onCreate, tasks}) {\n  const [task, setTask] = useState(initialState);\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setTask(task => ({\n      ...task,\n      [name]: value,\n      id: new Date().toLocaleTimeString()\n    }));\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onCreate(task);\n    setTask(initialState);\n  }\n\n  return (\n    <form className=\"new-task\" onSubmit={handleSubmit}  >\n      <label className=\"new-task__label\">\n        Задача\n        <input\n          name=\"title\"\n          type=\"text\"\n          maxLength={20}\n          value={task.title}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"new-task__label\">\n        Описание\n        <textarea\n          rows=\"2\"\n          name='text'\n          value={task.text}\n          onChange={handleChange}>\n        </textarea>\n      </label>\n      \n      <label className=\"new-task__label\">\n        Почта\n        <input\n          name=\"mail\"\n          type=\"email\"\n          value={task.mail}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"new-task__label\">\n        Юзер\n        <input\n          name=\"user\"\n          type=\"text\"\n          value={task.user}\n          onChange={handleChange}\n        />\n      </label>\n\n      <Button\n        className=\"app__create\"\n        id=\"create__task\"\n        disabled={task.title === '' || task.text === '' || task.mail === '' || task.user === ''}\n      >\n        Создать задачу\n      </Button>\n    </form>\n  )\n};","import React, { useState } from 'react'\nimport TasksList from \"./TasksList/TasksList\";\nimport Pagination from \"./Pagination/Pagination\";\nimport Sort from './Sort/Sort';\nimport NewTask from './NewTask/NewTask';\nimport initialState from './tasks.json';\nimport './App.css';\n\nconst limit = 3;\n\nexport default function App() {\n  const [tasks, setTasks] = useState(initialState);\n  const [page, setPage] = useState(1);\n\n  const currentTasks = tasks.slice((page - 1) * limit, page * limit);\n  const pagesTotal = Math.ceil(tasks.length / 3);\n\n  const handlePrevClick = () => {\n    setPage(page => Math.max(page - 1, 1));\n  }\n\n  const handleNextClick = () => {\n    setPage(page => Math.min(page + 1, pagesTotal));\n  }\n\n  const handleSortChange = (event) => {\n    switch (event.target.value) {\n      case 'user_up':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.user > b.user ? 1 : -1)]);\n        break;\n\n      case 'user_down':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.user < b.user ? 1 : -1)]);\n        break;\n\n      case 'status_up':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.isDone > b.isDone ? 1 : -1)]);\n        break;\n\n      case 'status_down':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.isDone < b.isDone ? 1 : -1)]);\n        break;\n\n      case 'mail_up':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.mail > b.mail ? 1 : -1)]);\n        break;\n\n      case 'mail_down':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.mail < b.mail ? 1 : -1)]);\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  const handleCreateClick = (task) => {\n    setTasks(tasks => [task, ...tasks]);\n  }\n\n  function handleDelete (id) {\n    setTasks(tasks => tasks.filter(task => task.id !== id))\n  }\n\n  function handleIsDone(id) {\n    setTasks(tasks => tasks.map(task => task.id === id ? {...task, isDone: !task.isDone} : task))\n  }\n  \n  return (\n    <div className=\"app\" style={{paddingTop: tasks.length > 0 ? '0' : '10rem'}}>\n      {tasks.length > 0 &&\n        <Sort onChange={handleSortChange} />}\n\n      {tasks.length > 0 &&\n        <Pagination\n          onPrevClick={handlePrevClick}\n          onNextClick={handleNextClick}\n          page={page}\n          pagesTotal={pagesTotal}\n          tasks={tasks}\n        />}\n      \n\n      {tasks.length < 1 ? null : <TasksList tasks={tasks} currentTasks={currentTasks} handleDelete={handleDelete} handleIsDone={handleIsDone} />}\n\n      <NewTask onCreate={handleCreateClick} tasks={tasks} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}