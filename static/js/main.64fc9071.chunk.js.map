{"version":3,"sources":["Task/Task.js","TasksList/TasksList.js","Button/Button.js","Pagination/Pagination.js","Sort/Sort.js","NewTask/NewTask.js","App.js","index.js"],"names":["Task","_ref","id","user","title","text","mail","isDone","onComplete","onDelete","_jsx","className","children","_jsxs","concat","onClick","style","fontWeight","TasksList","tasks","currentTasks","handleDelete","handleIsDone","length","map","task","Button","props","restProps","_objectWithoutProperties","_excluded","classNames","_objectSpread","Pagination","onPrevClick","onNextClick","page","pagesTotal","disabled","Math","max","Sort","onChange","value","initialState","NewTask","setTask","useState","handleChange","event","name","target","Date","toLocaleTimeString","onSubmit","preventDefault","onCreate","type","maxLength","rows","App","setTasks","setPage","slice","ceil","sort","a","b","handlePrevClick","handleNextClick","min","filter","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64fc9071.chunk.js","sourcesContent":["import React from 'react'\nimport './Task.css'\n\nexport default function Task({id, user, title, text, mail, isDone, onComplete, onDelete,}) {\n\n  return (\n    <div className='task-container'>\n      <div className={`task ${isDone ? 'task-done' : ''}`}>\n        <p className='btns bottom_line'>\n          <button id='btnChangeCondition' className={`button button__condition ${isDone ? 'button__done' : 'button__not-done'}`} onClick={() => onComplete(id)}> {isDone === true ? 'Выполнено' : 'Не выполнено'} </button>\n          <button className='button__delete' onClick={() => onDelete(id)}>&times;</button>\n        </p>\n        <h2 className=\"task__title\">Задача: {title}</h2>\n        <p className=\"task__text\"><b>Описание</b>: {text} </p>\n        <p className=\"task__mail\"><b>E-mail</b>: {mail} </p>\n        <p className=\"task__user bottom_line\"><b>Пользователь</b>: {user} </p>\n        <p style={{fontWeight: 400}}>Выполнено: <b><span className={`${isDone ? 'green' : 'red'}`}>{isDone ? 'да' : 'нет'}</span></b></p>\n      </div>\n    </div>\n  );\n}\n    \n","import Task from \"../Task/Task\"\nimport './TasksList.css'\n\nfunction TasksList({ tasks, currentTasks, handleDelete, handleIsDone }) {\n  return (\n\n    <div className={`${tasks.length === 2 ? 'tasks-two' : 'tasks-list'}`}>\n        {currentTasks.map((task) => (\n          <Task\n            key={task.id}\n            id={task.id}\n            user={task.user}\n            title={task.title}\n            text={task.text}\n            mail={task.mail}\n            isDone={task.isDone}\n            onDelete={handleDelete}\n            onComplete={handleIsDone}\n        />\n    ))}\n    </div>\n  )\n}\n\nexport default TasksList","import React from \"react\";\nimport './Button.css';\n\nexport default function Button(props) {\n  const { className, ...restProps } = props;\n  const classNames = className ? `button ${className}` : 'button';\n\n  return (\n    <button className={classNames} {...restProps} />\n  );\n}","import React from \"react\";\nimport Button from '../Button/Button'\nimport './Pagination.css';\n\nexport default function Pagination({onPrevClick, onNextClick, page, pagesTotal}) {\n  return (\n    <div className=\"pagination\">\n      <Button\n        className=\"pagination__prev pagination-btn\"\n        onClick={onPrevClick}\n        disabled={page === 1}\n      >\n        Предыдущая страница\n      </Button>\n\n      <div className=\"pagination__page\">{page} / {Math.max(pagesTotal, 1)}</div>\n\n      <Button\n        className=\"pagination__next pagination-btn\"\n        onClick={onNextClick}\n        disabled={page === pagesTotal}\n      >\n        Следующая страница\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Sort.css\";\n\nexport default function Sort(props) {\n  return (\n    <select className=\"sort\" onChange={props.onChange} id=\"sort\">\n      <option value=\"user_up\">По имени пользователя (по возрастанию)</option>\n      <option value=\"user_down\">По имени пользователя (по убыванию)</option>\n      <option value=\"status_up\">По статусу (сначала невыполненные)</option>\n      <option value=\"status_down\">По статусу (сначала выполненные)</option>\n      <option value=\"mail_up\">По email (по возрастанию)</option>\n      <option value=\"mail_down\">По email (по убыванию)</option>\n    </select>\n  );\n}\n","import React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport './NewTask.css';\n// import init from '../tasks.json'\n\nconst initialState = {\n  title: '',\n  text: '',\n  mail: '',\n  isDone: false,\n  user: '',\n  id: ''\n};\n\nexport default function NewTask(props) {\n  const [task, setTask] = useState(initialState);\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setTask(task => ({\n      ...task,\n      [name]: value,\n      id: new Date().toLocaleTimeString()\n    }));\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.onCreate(task);\n    setTask(initialState);\n  }\n\n  return (\n    <form className=\"new-task\" onSubmit={handleSubmit}>\n      <label className=\"new-task__label\">\n        Задача\n        <input\n          name=\"title\"\n          type=\"text\"\n          maxLength={20}\n          value={task.title}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"new-task__label\">\n        Описание\n        <textarea\n          rows=\"2\"\n          name='text'\n          value={task.text}\n          onChange={handleChange}>\n        </textarea>\n        {/* <input\n          name=\"text\"\n          type=\"text\"\n          value={task.text}\n          onChange={handleChange}\n        /> */}\n      </label>\n      \n      <label className=\"new-task__label\">\n        Почта\n        <input\n          name=\"mail\"\n          type=\"email\"\n          value={task.mail}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className=\"new-task__label\">\n        Юзер\n        <input\n          name=\"user\"\n          type=\"text\"\n          value={task.user}\n          onChange={handleChange}\n        />\n      </label>\n\n      <Button\n        className=\"app__create\"\n        id=\"create__task\"\n        disabled={task.title === '' || task.text === '' || task.mail === '' || task.user === ''}\n      >\n        Создать задачу\n      </Button>\n    </form>\n  )\n};","import React, { useState } from 'react'\nimport TasksList from \"./TasksList/TasksList\";\nimport Pagination from \"./Pagination/Pagination\";\nimport Sort from './Sort/Sort';\nimport NewTask from './NewTask/NewTask';\nimport initialState from './tasks.json';\nimport './App.css';\n\nconst limit = 3;\n\nexport default function App() {\n  const [tasks, setTasks] = useState(initialState);\n  const [page, setPage] = useState(1);\n\n  const currentTasks = tasks.slice((page - 1) * limit, page * limit);\n  const pagesTotal = Math.ceil(tasks.length / 3);\n\n  const handlePrevClick = () => {\n    setPage(page => Math.max(page - 1, 1));\n  }\n\n  const handleNextClick = () => {\n    setPage(page => Math.min(page + 1, pagesTotal));\n  }\n\n  const handleSortChange = (event) => {\n    switch (event.target.value) {\n      case 'user_up':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.user > b.user ? 1 : -1)]);\n        break;\n\n      case 'user_down':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.user < b.user ? 1 : -1)]);\n        break;\n\n      case 'status_up':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.isDone > b.isDone ? 1 : -1)]);\n        break;\n\n      case 'status_down':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.isDone < b.isDone ? 1 : -1)]);\n        break;\n\n      case 'mail_up':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.mail > b.mail ? 1 : -1)]);\n        break;\n\n      case 'mail_down':\n        setTasks((tasks) => [...tasks.sort((a, b) => a.mail < b.mail ? 1 : -1)]);\n        break;\n    \n      default:\n        break;\n    }\n  }\n\n  const handleCreateClick = (task) => {\n    setTasks(tasks => [task, ...tasks]);\n    console.log(task)\n  }\n\n  function handleDelete (id) {\n    setTasks(tasks => tasks.filter(task => task.id !== id))\n    console.log(tasks)\n  }\n\n  function handleIsDone(id) {\n    setTasks(tasks => tasks.map(task => task.id === id ? {...task, isDone: !task.isDone} : task))\n  }\n  \n  return (\n    <div className=\"app\">\n      <Sort onChange={handleSortChange} />\n\n      <Pagination\n        onPrevClick={handlePrevClick}\n        onNextClick={handleNextClick}\n        page={page}\n        pagesTotal={pagesTotal}\n      />\n\n      <TasksList tasks={tasks} currentTasks={currentTasks} handleDelete={handleDelete} handleIsDone={handleIsDone} />\n\n      <NewTask onCreate={handleCreateClick} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}